//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NIT.NITCodeunit {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StudentEngine_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine")]
    public partial class StudentEngine : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnBLOBCustomerStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRandomizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLoadStudentComplaintOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveComplaintOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertComplaintOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCountUnitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLoadAllComplaintsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnLoginTutorOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnResetTutorPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetSemesterRegCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveComplaintReplyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GeneratePayslipOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGenerateStudentEligibilityOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StudentEngine() {
            this.Url = global::NIT.Properties.Settings.Default.NIT_NITCodeunit_StudentEngine;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnLoginCompletedEventHandler FnLoginCompleted;
        
        /// <remarks/>
        public event GetItemImageCompletedEventHandler GetItemImageCompleted;
        
        /// <remarks/>
        public event GetCustomerStatementCompletedEventHandler GetCustomerStatementCompleted;
        
        /// <remarks/>
        public event FnBLOBCustomerStatementCompletedEventHandler FnBLOBCustomerStatementCompleted;
        
        /// <remarks/>
        public event FnRandomizeCompletedEventHandler FnRandomizeCompleted;
        
        /// <remarks/>
        public event FnChangePasswordCompletedEventHandler FnChangePasswordCompleted;
        
        /// <remarks/>
        public event FnLoadStudentComplaintCompletedEventHandler FnLoadStudentComplaintCompleted;
        
        /// <remarks/>
        public event FnSaveComplaintCompletedEventHandler FnSaveComplaintCompleted;
        
        /// <remarks/>
        public event FnInsertComplaintCompletedEventHandler FnInsertComplaintCompleted;
        
        /// <remarks/>
        public event FnInsertRatingCompletedEventHandler FnInsertRatingCompleted;
        
        /// <remarks/>
        public event FnCountUnitsCompletedEventHandler FnCountUnitsCompleted;
        
        /// <remarks/>
        public event FnUpdateProfileCompletedEventHandler FnUpdateProfileCompleted;
        
        /// <remarks/>
        public event FnResetPasswordCompletedEventHandler FnResetPasswordCompleted;
        
        /// <remarks/>
        public event FnLoadAllComplaintsCompletedEventHandler FnLoadAllComplaintsCompleted;
        
        /// <remarks/>
        public event FnLoginTutorCompletedEventHandler FnLoginTutorCompleted;
        
        /// <remarks/>
        public event FnResetTutorPasswordCompletedEventHandler FnResetTutorPasswordCompleted;
        
        /// <remarks/>
        public event FnGetSemesterRegCodeCompletedEventHandler FnGetSemesterRegCodeCompleted;
        
        /// <remarks/>
        public event FnSaveComplaintReplyCompletedEventHandler FnSaveComplaintReplyCompleted;
        
        /// <remarks/>
        public event GeneratePayslipCompletedEventHandler GeneratePayslipCompleted;
        
        /// <remarks/>
        public event FnGenerateStudentEligibilityCompletedEventHandler FnGenerateStudentEligibilityCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnLogin(string studentCode, string password) {
            object[] results = this.Invoke("FnLogin", new object[] {
                        studentCode,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnLoginAsync(string studentCode, string password) {
            this.FnLoginAsync(studentCode, password, null);
        }
        
        /// <remarks/>
        public void FnLoginAsync(string studentCode, string password, object userState) {
            if ((this.FnLoginOperationCompleted == null)) {
                this.FnLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoginOperationCompleted);
            }
            this.InvokeAsync("FnLogin", new object[] {
                        studentCode,
                        password}, this.FnLoginOperationCompleted, userState);
        }
        
        private void OnFnLoginOperationCompleted(object arg) {
            if ((this.FnLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoginCompleted(this, new FnLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:GetItemImage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="GetItemImage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetItemImage(string studentCode) {
            object[] results = this.Invoke("GetItemImage", new object[] {
                        studentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemImageAsync(string studentCode) {
            this.GetItemImageAsync(studentCode, null);
        }
        
        /// <remarks/>
        public void GetItemImageAsync(string studentCode, object userState) {
            if ((this.GetItemImageOperationCompleted == null)) {
                this.GetItemImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemImageOperationCompleted);
            }
            this.InvokeAsync("GetItemImage", new object[] {
                        studentCode}, this.GetItemImageOperationCompleted, userState);
        }
        
        private void OnGetItemImageOperationCompleted(object arg) {
            if ((this.GetItemImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemImageCompleted(this, new GetItemImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:GetCustomerStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="GetCustomerStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetCustomerStatement(string studentCode, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateForm, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo) {
            object[] results = this.Invoke("GetCustomerStatement", new object[] {
                        studentCode,
                        dateForm,
                        dateTo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerStatementAsync(string studentCode, System.DateTime dateForm, System.DateTime dateTo) {
            this.GetCustomerStatementAsync(studentCode, dateForm, dateTo, null);
        }
        
        /// <remarks/>
        public void GetCustomerStatementAsync(string studentCode, System.DateTime dateForm, System.DateTime dateTo, object userState) {
            if ((this.GetCustomerStatementOperationCompleted == null)) {
                this.GetCustomerStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerStatementOperationCompleted);
            }
            this.InvokeAsync("GetCustomerStatement", new object[] {
                        studentCode,
                        dateForm,
                        dateTo}, this.GetCustomerStatementOperationCompleted, userState);
        }
        
        private void OnGetCustomerStatementOperationCompleted(object arg) {
            if ((this.GetCustomerStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerStatementCompleted(this, new GetCustomerStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnBLOBCustomerStatement", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnBLOBCustomerStatement_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnBLOBCustomerStatement(string customerrNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateFrom, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateTo, ref string bigText) {
            object[] results = this.Invoke("FnBLOBCustomerStatement", new object[] {
                        customerrNo,
                        dateFrom,
                        dateTo,
                        bigText});
            bigText = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnBLOBCustomerStatementAsync(string customerrNo, System.DateTime dateFrom, System.DateTime dateTo, string bigText) {
            this.FnBLOBCustomerStatementAsync(customerrNo, dateFrom, dateTo, bigText, null);
        }
        
        /// <remarks/>
        public void FnBLOBCustomerStatementAsync(string customerrNo, System.DateTime dateFrom, System.DateTime dateTo, string bigText, object userState) {
            if ((this.FnBLOBCustomerStatementOperationCompleted == null)) {
                this.FnBLOBCustomerStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnBLOBCustomerStatementOperationCompleted);
            }
            this.InvokeAsync("FnBLOBCustomerStatement", new object[] {
                        customerrNo,
                        dateFrom,
                        dateTo,
                        bigText}, this.FnBLOBCustomerStatementOperationCompleted, userState);
        }
        
        private void OnFnBLOBCustomerStatementOperationCompleted(object arg) {
            if ((this.FnBLOBCustomerStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnBLOBCustomerStatementCompleted(this, new FnBLOBCustomerStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnRandomize", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnRandomize_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnRandomize() {
            object[] results = this.Invoke("FnRandomize", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnRandomizeAsync() {
            this.FnRandomizeAsync(null);
        }
        
        /// <remarks/>
        public void FnRandomizeAsync(object userState) {
            if ((this.FnRandomizeOperationCompleted == null)) {
                this.FnRandomizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRandomizeOperationCompleted);
            }
            this.InvokeAsync("FnRandomize", new object[0], this.FnRandomizeOperationCompleted, userState);
        }
        
        private void OnFnRandomizeOperationCompleted(object arg) {
            if ((this.FnRandomizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRandomizeCompleted(this, new FnRandomizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnChangePassword(string studentCode, string newPassword, string oldPassword) {
            object[] results = this.Invoke("FnChangePassword", new object[] {
                        studentCode,
                        newPassword,
                        oldPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnChangePasswordAsync(string studentCode, string newPassword, string oldPassword) {
            this.FnChangePasswordAsync(studentCode, newPassword, oldPassword, null);
        }
        
        /// <remarks/>
        public void FnChangePasswordAsync(string studentCode, string newPassword, string oldPassword, object userState) {
            if ((this.FnChangePasswordOperationCompleted == null)) {
                this.FnChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("FnChangePassword", new object[] {
                        studentCode,
                        newPassword,
                        oldPassword}, this.FnChangePasswordOperationCompleted, userState);
        }
        
        private void OnFnChangePasswordOperationCompleted(object arg) {
            if ((this.FnChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnChangePasswordCompleted(this, new FnChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnLoadStudentComplaint", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnLoadStudentComplaint_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLoadStudentComplaint(int entryNo) {
            object[] results = this.Invoke("FnLoadStudentComplaint", new object[] {
                        entryNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLoadStudentComplaintAsync(int entryNo) {
            this.FnLoadStudentComplaintAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void FnLoadStudentComplaintAsync(int entryNo, object userState) {
            if ((this.FnLoadStudentComplaintOperationCompleted == null)) {
                this.FnLoadStudentComplaintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoadStudentComplaintOperationCompleted);
            }
            this.InvokeAsync("FnLoadStudentComplaint", new object[] {
                        entryNo}, this.FnLoadStudentComplaintOperationCompleted, userState);
        }
        
        private void OnFnLoadStudentComplaintOperationCompleted(object arg) {
            if ((this.FnLoadStudentComplaintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoadStudentComplaintCompleted(this, new FnLoadStudentComplaintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnSaveComplaint", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnSaveComplaint_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnSaveComplaint(int admNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime complaintDate, string complaintDetails) {
            object[] results = this.Invoke("FnSaveComplaint", new object[] {
                        admNo,
                        complaintDate,
                        complaintDetails});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveComplaintAsync(int admNo, System.DateTime complaintDate, string complaintDetails) {
            this.FnSaveComplaintAsync(admNo, complaintDate, complaintDetails, null);
        }
        
        /// <remarks/>
        public void FnSaveComplaintAsync(int admNo, System.DateTime complaintDate, string complaintDetails, object userState) {
            if ((this.FnSaveComplaintOperationCompleted == null)) {
                this.FnSaveComplaintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveComplaintOperationCompleted);
            }
            this.InvokeAsync("FnSaveComplaint", new object[] {
                        admNo,
                        complaintDate,
                        complaintDetails}, this.FnSaveComplaintOperationCompleted, userState);
        }
        
        private void OnFnSaveComplaintOperationCompleted(object arg) {
            if ((this.FnSaveComplaintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveComplaintCompleted(this, new FnSaveComplaintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnInsertComplaint", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnInsertComplaint_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnInsertComplaint(int admNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime complaintDate, string complaintDetails) {
            object[] results = this.Invoke("FnInsertComplaint", new object[] {
                        admNo,
                        complaintDate,
                        complaintDetails});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertComplaintAsync(int admNo, System.DateTime complaintDate, string complaintDetails) {
            this.FnInsertComplaintAsync(admNo, complaintDate, complaintDetails, null);
        }
        
        /// <remarks/>
        public void FnInsertComplaintAsync(int admNo, System.DateTime complaintDate, string complaintDetails, object userState) {
            if ((this.FnInsertComplaintOperationCompleted == null)) {
                this.FnInsertComplaintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertComplaintOperationCompleted);
            }
            this.InvokeAsync("FnInsertComplaint", new object[] {
                        admNo,
                        complaintDate,
                        complaintDetails}, this.FnInsertComplaintOperationCompleted, userState);
        }
        
        private void OnFnInsertComplaintOperationCompleted(object arg) {
            if ((this.FnInsertComplaintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertComplaintCompleted(this, new FnInsertComplaintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnInsertRating", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnInsertRating_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertRating(string unitCode, string studentCode, string unitName, string tutorName, int tutorRate) {
            object[] results = this.Invoke("FnInsertRating", new object[] {
                        unitCode,
                        studentCode,
                        unitName,
                        tutorName,
                        tutorRate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertRatingAsync(string unitCode, string studentCode, string unitName, string tutorName, int tutorRate) {
            this.FnInsertRatingAsync(unitCode, studentCode, unitName, tutorName, tutorRate, null);
        }
        
        /// <remarks/>
        public void FnInsertRatingAsync(string unitCode, string studentCode, string unitName, string tutorName, int tutorRate, object userState) {
            if ((this.FnInsertRatingOperationCompleted == null)) {
                this.FnInsertRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertRatingOperationCompleted);
            }
            this.InvokeAsync("FnInsertRating", new object[] {
                        unitCode,
                        studentCode,
                        unitName,
                        tutorName,
                        tutorRate}, this.FnInsertRatingOperationCompleted, userState);
        }
        
        private void OnFnInsertRatingOperationCompleted(object arg) {
            if ((this.FnInsertRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertRatingCompleted(this, new FnInsertRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnCountUnits", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnCountUnits_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnCountUnits(string studentCode) {
            object[] results = this.Invoke("FnCountUnits", new object[] {
                        studentCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnCountUnitsAsync(string studentCode) {
            this.FnCountUnitsAsync(studentCode, null);
        }
        
        /// <remarks/>
        public void FnCountUnitsAsync(string studentCode, object userState) {
            if ((this.FnCountUnitsOperationCompleted == null)) {
                this.FnCountUnitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCountUnitsOperationCompleted);
            }
            this.InvokeAsync("FnCountUnits", new object[] {
                        studentCode}, this.FnCountUnitsOperationCompleted, userState);
        }
        
        private void OnFnCountUnitsOperationCompleted(object arg) {
            if ((this.FnCountUnitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCountUnitsCompleted(this, new FnCountUnitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnUpdateProfile", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnUpdateProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateProfile(string studentCode, string phoneNo, string address, int gender, string email) {
            object[] results = this.Invoke("FnUpdateProfile", new object[] {
                        studentCode,
                        phoneNo,
                        address,
                        gender,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateProfileAsync(string studentCode, string phoneNo, string address, int gender, string email) {
            this.FnUpdateProfileAsync(studentCode, phoneNo, address, gender, email, null);
        }
        
        /// <remarks/>
        public void FnUpdateProfileAsync(string studentCode, string phoneNo, string address, int gender, string email, object userState) {
            if ((this.FnUpdateProfileOperationCompleted == null)) {
                this.FnUpdateProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateProfileOperationCompleted);
            }
            this.InvokeAsync("FnUpdateProfile", new object[] {
                        studentCode,
                        phoneNo,
                        address,
                        gender,
                        email}, this.FnUpdateProfileOperationCompleted, userState);
        }
        
        private void OnFnUpdateProfileOperationCompleted(object arg) {
            if ((this.FnUpdateProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateProfileCompleted(this, new FnUpdateProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnResetPassword(string studentCode, string newPassword) {
            object[] results = this.Invoke("FnResetPassword", new object[] {
                        studentCode,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string studentCode, string newPassword) {
            this.FnResetPasswordAsync(studentCode, newPassword, null);
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string studentCode, string newPassword, object userState) {
            if ((this.FnResetPasswordOperationCompleted == null)) {
                this.FnResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("FnResetPassword", new object[] {
                        studentCode,
                        newPassword}, this.FnResetPasswordOperationCompleted, userState);
        }
        
        private void OnFnResetPasswordOperationCompleted(object arg) {
            if ((this.FnResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnResetPasswordCompleted(this, new FnResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnLoadAllComplaints", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnLoadAllComplaints_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLoadAllComplaints(int admNo) {
            object[] results = this.Invoke("FnLoadAllComplaints", new object[] {
                        admNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLoadAllComplaintsAsync(int admNo) {
            this.FnLoadAllComplaintsAsync(admNo, null);
        }
        
        /// <remarks/>
        public void FnLoadAllComplaintsAsync(int admNo, object userState) {
            if ((this.FnLoadAllComplaintsOperationCompleted == null)) {
                this.FnLoadAllComplaintsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoadAllComplaintsOperationCompleted);
            }
            this.InvokeAsync("FnLoadAllComplaints", new object[] {
                        admNo}, this.FnLoadAllComplaintsOperationCompleted, userState);
        }
        
        private void OnFnLoadAllComplaintsOperationCompleted(object arg) {
            if ((this.FnLoadAllComplaintsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoadAllComplaintsCompleted(this, new FnLoadAllComplaintsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnLoginTutor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnLoginTutor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLoginTutor(string tutorCode, string password) {
            object[] results = this.Invoke("FnLoginTutor", new object[] {
                        tutorCode,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLoginTutorAsync(string tutorCode, string password) {
            this.FnLoginTutorAsync(tutorCode, password, null);
        }
        
        /// <remarks/>
        public void FnLoginTutorAsync(string tutorCode, string password, object userState) {
            if ((this.FnLoginTutorOperationCompleted == null)) {
                this.FnLoginTutorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoginTutorOperationCompleted);
            }
            this.InvokeAsync("FnLoginTutor", new object[] {
                        tutorCode,
                        password}, this.FnLoginTutorOperationCompleted, userState);
        }
        
        private void OnFnLoginTutorOperationCompleted(object arg) {
            if ((this.FnLoginTutorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoginTutorCompleted(this, new FnLoginTutorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnResetTutorPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnResetTutorPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnResetTutorPassword(string tutorCode, string newPassword) {
            object[] results = this.Invoke("FnResetTutorPassword", new object[] {
                        tutorCode,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnResetTutorPasswordAsync(string tutorCode, string newPassword) {
            this.FnResetTutorPasswordAsync(tutorCode, newPassword, null);
        }
        
        /// <remarks/>
        public void FnResetTutorPasswordAsync(string tutorCode, string newPassword, object userState) {
            if ((this.FnResetTutorPasswordOperationCompleted == null)) {
                this.FnResetTutorPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnResetTutorPasswordOperationCompleted);
            }
            this.InvokeAsync("FnResetTutorPassword", new object[] {
                        tutorCode,
                        newPassword}, this.FnResetTutorPasswordOperationCompleted, userState);
        }
        
        private void OnFnResetTutorPasswordOperationCompleted(object arg) {
            if ((this.FnResetTutorPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnResetTutorPasswordCompleted(this, new FnResetTutorPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnGetSemesterRegCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnGetSemesterRegCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetSemesterRegCode(string studentCode) {
            object[] results = this.Invoke("FnGetSemesterRegCode", new object[] {
                        studentCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetSemesterRegCodeAsync(string studentCode) {
            this.FnGetSemesterRegCodeAsync(studentCode, null);
        }
        
        /// <remarks/>
        public void FnGetSemesterRegCodeAsync(string studentCode, object userState) {
            if ((this.FnGetSemesterRegCodeOperationCompleted == null)) {
                this.FnGetSemesterRegCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetSemesterRegCodeOperationCompleted);
            }
            this.InvokeAsync("FnGetSemesterRegCode", new object[] {
                        studentCode}, this.FnGetSemesterRegCodeOperationCompleted, userState);
        }
        
        private void OnFnGetSemesterRegCodeOperationCompleted(object arg) {
            if ((this.FnGetSemesterRegCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetSemesterRegCodeCompleted(this, new FnGetSemesterRegCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnSaveComplaintReply", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnSaveComplaintReply_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSaveComplaintReply(int complaintNo, string complaintreplyDetails) {
            object[] results = this.Invoke("FnSaveComplaintReply", new object[] {
                        complaintNo,
                        complaintreplyDetails});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveComplaintReplyAsync(int complaintNo, string complaintreplyDetails) {
            this.FnSaveComplaintReplyAsync(complaintNo, complaintreplyDetails, null);
        }
        
        /// <remarks/>
        public void FnSaveComplaintReplyAsync(int complaintNo, string complaintreplyDetails, object userState) {
            if ((this.FnSaveComplaintReplyOperationCompleted == null)) {
                this.FnSaveComplaintReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveComplaintReplyOperationCompleted);
            }
            this.InvokeAsync("FnSaveComplaintReply", new object[] {
                        complaintNo,
                        complaintreplyDetails}, this.FnSaveComplaintReplyOperationCompleted, userState);
        }
        
        private void OnFnSaveComplaintReplyOperationCompleted(object arg) {
            if ((this.FnSaveComplaintReplyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveComplaintReplyCompleted(this, new FnSaveComplaintReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:GeneratePayslip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="GeneratePayslip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GeneratePayslip(string employeeNumber, int payMonth) {
            object[] results = this.Invoke("GeneratePayslip", new object[] {
                        employeeNumber,
                        payMonth});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GeneratePayslipAsync(string employeeNumber, int payMonth) {
            this.GeneratePayslipAsync(employeeNumber, payMonth, null);
        }
        
        /// <remarks/>
        public void GeneratePayslipAsync(string employeeNumber, int payMonth, object userState) {
            if ((this.GeneratePayslipOperationCompleted == null)) {
                this.GeneratePayslipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGeneratePayslipOperationCompleted);
            }
            this.InvokeAsync("GeneratePayslip", new object[] {
                        employeeNumber,
                        payMonth}, this.GeneratePayslipOperationCompleted, userState);
        }
        
        private void OnGeneratePayslipOperationCompleted(object arg) {
            if ((this.GeneratePayslipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GeneratePayslipCompleted(this, new GeneratePayslipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/StudentEngine:FnGenerateStudentEligibilit" +
            "y", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", ResponseElementName="FnGenerateStudentEligibility_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/StudentEngine", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGenerateStudentEligibility(string employeeNumber, int payMonth) {
            object[] results = this.Invoke("FnGenerateStudentEligibility", new object[] {
                        employeeNumber,
                        payMonth});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGenerateStudentEligibilityAsync(string employeeNumber, int payMonth) {
            this.FnGenerateStudentEligibilityAsync(employeeNumber, payMonth, null);
        }
        
        /// <remarks/>
        public void FnGenerateStudentEligibilityAsync(string employeeNumber, int payMonth, object userState) {
            if ((this.FnGenerateStudentEligibilityOperationCompleted == null)) {
                this.FnGenerateStudentEligibilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGenerateStudentEligibilityOperationCompleted);
            }
            this.InvokeAsync("FnGenerateStudentEligibility", new object[] {
                        employeeNumber,
                        payMonth}, this.FnGenerateStudentEligibilityOperationCompleted, userState);
        }
        
        private void OnFnGenerateStudentEligibilityOperationCompleted(object arg) {
            if ((this.FnGenerateStudentEligibilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGenerateStudentEligibilityCompleted(this, new FnGenerateStudentEligibilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnLoginCompletedEventHandler(object sender, FnLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetItemImageCompletedEventHandler(object sender, GetItemImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetCustomerStatementCompletedEventHandler(object sender, GetCustomerStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnBLOBCustomerStatementCompletedEventHandler(object sender, FnBLOBCustomerStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnBLOBCustomerStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnBLOBCustomerStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string bigText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnRandomizeCompletedEventHandler(object sender, FnRandomizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRandomizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRandomizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnChangePasswordCompletedEventHandler(object sender, FnChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnLoadStudentComplaintCompletedEventHandler(object sender, FnLoadStudentComplaintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLoadStudentComplaintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLoadStudentComplaintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnSaveComplaintCompletedEventHandler(object sender, FnSaveComplaintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveComplaintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveComplaintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnInsertComplaintCompletedEventHandler(object sender, FnInsertComplaintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertComplaintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertComplaintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnInsertRatingCompletedEventHandler(object sender, FnInsertRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnCountUnitsCompletedEventHandler(object sender, FnCountUnitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCountUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCountUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnUpdateProfileCompletedEventHandler(object sender, FnUpdateProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnResetPasswordCompletedEventHandler(object sender, FnResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnLoadAllComplaintsCompletedEventHandler(object sender, FnLoadAllComplaintsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLoadAllComplaintsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLoadAllComplaintsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnLoginTutorCompletedEventHandler(object sender, FnLoginTutorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLoginTutorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLoginTutorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnResetTutorPasswordCompletedEventHandler(object sender, FnResetTutorPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnResetTutorPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnResetTutorPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnGetSemesterRegCodeCompletedEventHandler(object sender, FnGetSemesterRegCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetSemesterRegCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetSemesterRegCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnSaveComplaintReplyCompletedEventHandler(object sender, FnSaveComplaintReplyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveComplaintReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveComplaintReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GeneratePayslipCompletedEventHandler(object sender, GeneratePayslipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeneratePayslipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GeneratePayslipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnGenerateStudentEligibilityCompletedEventHandler(object sender, FnGenerateStudentEligibilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGenerateStudentEligibilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGenerateStudentEligibilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591